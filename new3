from pygame import*
import time as tm
font.init() 

window = display.set_mode((1500, 800))

f1 = font.Font(None, 36)

fps = time.Clock()
game = True
ex = False
lvl1 = True
lvl2 = False
lvl3 = False

class GameSprite(sprite.Sprite):
    def __init__(self, player_image, size_x, size_y, player_x, player_y,  player_speed, player_hp):
        super().__init__()
        self.image = transform.scale(image.load(player_image), (size_x, size_y))
        self.speed = player_speed
        self.rect = self.image.get_rect()
        self.rect.x = player_x
        self.rect.y = player_y
        self.hp = player_hp
        self.napr = "vverh"

    def ris(self):
        self.tanku = transform.scale(self.image, (60,70))
        self.tankr = transform.rotate(self.image, 90)
        self.tankd = transform.rotate(self.image, 180)
        self.tanka = transform.rotate(self.image, 270)
        if player.napr == "vverh":
            window.blit(self.tanku, (player.rect.x, player.rect.y))
        elif player.napr =="vniz":
            window.blit(self.tankd, (player.rect.x, player.rect.y))
        elif player.napr =="levo":
            window.blit(self.tankr, (player.rect.x, player.rect.y))
        elif player.napr =="pravo":
            window.blit(self.tanka, (player.rect.x, player.rect.y))

        if player2.napr == "vverh":
            window.blit(self.tanku, (player2.rect.x, player2.rect.y))
        elif player2.napr =="vniz":
            window.blit(self.tankd, (player2.rect.x, player2.rect.y))
        elif player2.napr =="levo":
            window.blit(self.tankr, (player2.rect.x, player2.rect.y))
        elif player2.napr =="pravo":
            window.blit(self.tanka, (player2.rect.x, player2.rect.y))
    
class bullet(sprite.Sprite):
    def __init__(self, img, x,y):
        super().__init__()
        self.image = transform.scale(image.load(img), (30,20))
        self.rect = self.image.get_rect() 
        self.rect.x = x
        self.rect.y = y
        self.napr = player.napr
    def ris(self):
        self.br = transform.scale(self.image, (40,20))
        self.bu = transform.rotate(self.image, 90)
        self.bl = transform.rotate(self.image, 180)
        self.bd = transform.rotate(self.image, 270)
        if self.napr == "vverh":
            self.rect.y -= 5
            window.blit(self.bu, (self.rect.x, self.rect.y))
        elif self.napr == "vniz":
            self.rect.y += 5
            window.blit(self.bd, (self.rect.x, self.rect.y))
        elif self.napr == "levo":
            self.rect.x -= 5
            window.blit(self.bl, (self.rect.x, self.rect.y))
        elif self.napr == "pravo":
            self.rect.x += 5
            window.blit(self.br, (self.rect.x, self.rect.y))

class gameobj(sprite.Sprite):
    def __init__(self, img, x,y,w,h,dmg):
        super().__init__()
        self.image = transform.scale(image.load(img), (w,h))
        self.rect = self.image.get_rect() 
        self.rect.x = x
        self.rect.y = y
        self.dmg = dmg
    def ris(self):
        window.blit(self.image, (self.rect.x, self.rect.y))

class minaobj(sprite.Sprite):
    def __init__(self, img, x,y,w,h,dmg):
        super().__init__()
        self.image = transform.scale(image.load(img), (w,h))
        self.rect = self.image.get_rect() 
        self.rect.x = x
        self.rect.y = y
        self.dmg = dmg
    def ris(self):
        window.blit(self.image, (self.rect.x, self.rect.y))
        

player = GameSprite('tanku.png', 60, 70, 60, 60, 6, 100)
exit1 =  gameobj('выход.jpg', 1300, 400, 50, 50, 0)
exit2 =  gameobj('выход.jpg', 50, 50, 50, 50, 0)
exit3 =  gameobj('выход.jpg', 1400, 700, 50, 50, 0)
player2 = GameSprite('tanku.png', 60, 70, 60, 600, 5, 100)

mybullets = []    

x1 = 0
y1 = 0
x2 = 0
y2 = 0
map1 = []
map2 = []
map3 = []
m1 = []
m2 = []
m3 = []

with open('map.txt') as file:
    karta = file.readlines()

for y in karta:
    line = y.split(' ')
    for x in line:
        if "1" in x:
            w = gameobj('wall.png', x1, y1, 50,50,0)
            map1.append(w)
        x1 += 40
        if "2" in x:
            m = minaobj('мина.png', x2,y2,50,50,80)
            m1.append(m)
        x2 += 40
    x1 = 0
    y1+=40
    x2 = 0
    y2 +=40
y1 = 0
y2 = 0

file.close()

with open('map2.txt') as file:
        karta = file.readlines()

for y in karta:
    line = y.split(' ')
    for x in line:
        if "1" in x:
            w = gameobj('wall.png', x1, y1, 50,50,0)
            map2.append(w)
        x1 += 40
        if "2" in x:
            m = minaobj('мина.png', x2,y2,50,50,80)
            m2.append(m)
        x2 += 40
    x1 = 0
    y1+=40
    x2 = 0
    y2 +=40

y1 = 0
y2 = 0

file.close()


with open('map3.txt') as file:
    karta = file.readlines()

for y in karta:
    line = y.split(' ')
    for x in line:
        if "1" in x:
            w = gameobj('wall.png', x1, y1, 50,50,0)
            map3.append(w)
        x1 += 40
        if "2" in x:
            m = minaobj('мина.png', x2,y2,50,50,80)
            m3.append(m)
        x2 += 40
    x1 = 0
    y1+=40
    x2 = 0
    y2 +=40

file.close()

time1 = tm.time()
while game:
    window.fill((40, 80, 60))
    time2 = tm.time()
    x3 = player.rect.x
    y3 = player.rect.y
    for e in event.get():
        if e.type == QUIT:
            game = False
        if e.type == KEYDOWN:
            if e.key == K_SPACE:
                if player.napr == 'levo':
                    p = bullet('bulletr.png', player.rect.x+5, player.rect.y+25)
                if player.napr == 'pravo':
                    p = bullet('bulletr.png', player.rect.x+5, player.rect.y+25)
                if player.napr == 'vverh':
                    p = bullet('bulletr.png', player.rect.x+25, player.rect.y+5)
                if player.napr == 'vniz':
                    p = bullet('bulletr.png', player.rect.x+25, player.rect.y+5)
                mybullets.append(p)

    keys = key.get_pressed()
    if keys[K_d]:
        player.napr = "pravo"
        player.rect.x += player.speed
    elif keys[K_a]:
        player.napr = "levo"
        player.rect.x -= player.speed
    if keys[K_w]:
        player.napr = "vverh"
        player.rect.y -= player.speed
    elif keys[K_s]:
        player.napr = "vniz"
        player.rect.y += player.speed

    if keys[K_RIGHT]:
        player2.napr = "pravo"
        player2.rect.x += player2.speed
    elif keys[K_LEFT]:
        player2.napr = "levo"
        player2.rect.x -= player2.speed
    if keys[K_UP]:
        player2.napr = "vverh"
        player2.rect.y -= player2.speed
    elif keys[K_DOWN]:
        player2.napr = "vniz"
        player2.rect.y += player2.speed

    text = f1.render(str(time2-time1), True, (255,255,255))

   
    if sprite.collide_rect(player2, exit1):
        exit1.rect.x=5000
        lvl1 = False
        lvl2 = True
        time1 = tm.time()

    if lvl2 == True:
        time3 = tm.time()
        if time3 - time1 > 3:
            exit2.ris()
        text2 = f1.render(str(time3-time1), True, (255,255,255))    

    if sprite.collide_rect(player2, exit2):
        exit2.rect.x = 5000
        lvl2 = False
        lvl3 = True
        time1 = tm.time()

    
    if player.hp <= 0:
        game = False
    if player2.hp <= 0:
        game = False


    player.ris()
    player2.ris()


    if lvl1 == True:
        if time2 - time1 > 3:
            exit1.ris()
        for w in map1:
            w.ris()   
            if player.napr == 'vverh' and sprite.collide_rect(player, w):
                player.rect.y +=5
            if player.napr == 'vniz' and sprite.collide_rect(player, w):
                player.rect.y -=5
            if player.napr == 'levo' and sprite.collide_rect(player, w):
                player.rect.x +=5
            if player.napr == 'pravo' and sprite.collide_rect(player, w):
                player.rect.x -=5
            if player2.napr == 'vverh' and sprite.collide_rect(player2, w):
                player2.rect.y +=5
            if player2.napr == 'vniz' and sprite.collide_rect(player2, w):
                player2.rect.y -=5
            if player2.napr == 'levo' and sprite.collide_rect(player2, w):
                player2.rect.x +=5
            if player2.napr == 'pravo' and sprite.collide_rect(player2, w):
                player2.rect.x -= 5   
        for m in m1:
            m.ris()
            if sprite.collide_rect(player, m):
                    player.speed -= 0.5
                    m1.remove(m)
            if sprite.collide_rect(player2, m):
                    player2.speed -= 0.5
                    m1.remove(m)

    if lvl2 == True:
        for w in map2:
           w.ris()
           if player.napr == 'vverh' and sprite.collide_rect(player, w):
               player.rect.y += 5
           if player.napr == 'vniz' and sprite.collide_rect(player, w):
               player.rect.y -= 5
           if player.napr == 'levo' and sprite.collide_rect(player, w):
               player.rect.x += 5
           if player.napr == 'pravo' and sprite.collide_rect(player, w):
               player.rect.x -= 5
           if player2.napr == 'vverh' and sprite.collide_rect(player2, w):
               player2.rect.y += 5
           if player2.napr == 'vniz' and sprite.collide_rect(player2, w):
               player2.rect.y -= 5
           if player2.napr == 'levo' and sprite.collide_rect(player2, w):
               player2.rect.x += 5
           if player2.napr == 'pravo' and sprite.collide_rect(player2, w):
               player2.rect.x -= 5
        for m in m2:
           m.ris()
           if sprite.collide_rect(player, m):
                   player.speed  -= 0.5
                   m2.remove(m)
           if sprite.collide_rect(player2, m):
                   player2.speed -= 0.5
                   m2.remove(m)
        window.blit(text2, (720,10))

    if lvl1 == True:
        window.blit(text, (720,10))
                
    if lvl3 == True:
        time4 = tm.time()
        if time4 - time1 > 3:
            exit3.ris()
        text3 = f1.render(str(time4-time1), True, (255,255,255))
        for w in map3:
           w.ris()
           if player.napr == 'vverh' and sprite.collide_rect(player, w):
               player.rect.y += 5
           if player.napr == 'vniz' and sprite.collide_rect(player, w):
               player.rect.y -= 5
           if player.napr == 'levo' and sprite.collide_rect(player, w):
               player.rect.x += 5
           if player.napr == 'pravo' and sprite.collide_rect(player, w):
               player.rect.x -= 5
           if player2.napr == 'vverh' and sprite.collide_rect(player2, w):
               player2.rect.y += 5
           if player2.napr == 'vniz' and sprite.collide_rect(player2, w):
               player2.rect.y -= 5
           if player2.napr == 'levo' and sprite.collide_rect(player2, w):
               player2.rect.x += 5
           if player2.napr == 'pravo' and sprite.collide_rect(player2, w):
               player2.rect.x -= 5
        for m in m3:
           m.ris()
           if sprite.collide_rect(player, m):
                player.speed -= 1
                m3.remove(m)
           if sprite.collide_rect(player2, m):
                player2.speed -= 1
                m3.remove(m)
        window.blit(text3, (720,10))

        if sprite.collide_rect(player2, exit3):
            game = False

    for pp in mybullets:
        pp.ris() 
        if sprite.collide_rect(pp, player2):
            player2.hp -= 40
            mybullets.remove(pp)
        for w in map1:
            if sprite.collide_rect(pp, w):
                try:
                    mybullets.remove(pp)
                except:
                    pass
    fps.tick(60)
    display.update()
