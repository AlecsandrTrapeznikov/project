from pygame import*

window = display.set_mode((1500, 800))

fps = time.Clock()
game = True
lvl1 = True
lvl2 = False
lvl3 = False

class GameSprite(sprite.Sprite):
    def __init__(self, player_image, size_x, size_y, player_x, player_y,  player_speed, player_hp):
        super().__init__()
        self.image = transform.scale(image.load(player_image), (size_x, size_y))
        self.speed = player_speed
        self.rect = self.image.get_rect()
        self.rect.x = player_x
        self.rect.y = player_y
        self.hp = player_hp
        self.napr = "vverh"

    def ris(self):
        self.tanku = transform.scale(self.image, (70,100))
        self.tankr = transform.rotate(self.image, 90)
        self.tankd = transform.rotate(self.image, 180)
        self.tanka = transform.rotate(self.image, 270)
        if player.napr == "vverh":
            window.blit(self.tanku, (self.rect.x, self.rect.y))
        elif player.napr =="vniz":
            window.blit(self.tankd, (self.rect.x, self.rect.y))
        elif player.napr =="levo":
            window.blit(self.tankr, (self.rect.x, self.rect.y))
        elif player.napr =="pravo":
            window.blit(self.tanka, (self.rect.x, self.rect.y))
    
class bullet(sprite.Sprite):
    def __init__(self, bullet_img, size_x, size_y, bullet_x, bullet_y, bullet_speed, bullet_dmg):
        super().__init__()
        self.image = transform.scale(image.load(bullet_img), (size_x, size_y))
        self.speed = bullet_speed
        self.rect = self.image.get_rect()
        self.rect.x = bullet_x
        self.rect.y = bullet_y
        self.dmg = bullet_dmg

    def ris(self):
        self.bulletu = transform.scale(self.image, (70,100))
        self.bulletr = transform.rotate(self.image, 90)
        self.bulletd = transform.rotate(self.image, 180)
        self.bulletl = transform.rotate(self.image, 270)
        if player.napr == "vverh":
            window.blit(self.bulletu, (player.rect.x, player.rect.y))
            bullet.rect.y += bullet.speed
        elif player.napr =="vniz":
            bullet.rect.y -= bullet.speed
            window.blit(self.bulletd, (player.rect.x, player.rect.y))
        elif player.napr =="levo":
            window.blit(self.bulletl, (player.rect.x, player.rect.y))
            bullet.rect.x -= bullet.speed
        elif player.napr =="pravo":
            window.blit(self.bulletr, (player.rect.x, player.rect.y))
            bullet.rect.x += bullet.speed

class gameobj(sprite.Sprite):
    def __init__(self, img, x,y,w,h,dmg):
        super().__init__()
        self.image = transform.scale(image.load(img), (w,h))
        self.rect = self.image.get_rect() 
        self.rect.x = x
        self.rect.y = y
        self.dmg = dmg
    def ris(self):
        window.blit(self.image, (self.rect.x, self.rect.y))
        

player = GameSprite('tanku.png', 70, 100, 0, 0, 5, 100)
bullet = bullet('bulletu.png', 50, 50, 2000, 2000, 5, 20)
exit1 =  gameobj('выход.png', 1300, 400, 50, 50, 0)
exit2 =  gameobj('выход.png', 50, 50, 50, 50, 0)
exit3 =  gameobj('выход.png', 1400, 700, 50, 50, 0)


    
with open('map.txt') as file:
    karta = file.readlines()

x1 = 0
y1 = 0
x2 = 0
y2 = 0
map = []
map2 = []
map3 = []


for y in karta:
    line = y.split(' ')
    for x in line:
        if "1" in x:
            w = gameobj('wall.png', x1, y1, 50,50,0)
            map.append(w)
        x1 += 40
        if "2" in x:
            m = gameobj('мина.png', x2,y2,50,50,80)
            map.append(m)
        x2 += 40
    x1 = 0
    y1+=40
    x2 = 0
    y2 +=40


while game:
    for e in event.get():
        if e.type == QUIT:
            game = False
    keys = key.get_pressed()
    if keys[K_d]:
        player.napr = "pravo"
        player.rect.x += player.speed
    elif keys[K_a]:
        player.napr = "levo"
        player.rect.x -= player.speed
    if keys[K_w]:
        player.napr = "vverh"
        player.rect.y -= player.speed
    elif keys[K_s]:
        player.napr = "vniz"
        player.rect.y += player.speed

            
    if sprite.collide_rect(player, exit1):
        lvl1 = False
        lvl2 = True
        for w in map:
            map.remove(w)
        
        with open('map2.txt') as file2:
            karta = file2.readlines()
        for y in karta:
            line = y.split(' ')
            for x in line:
                if "1" in x:
                    w = gameobj('wall.png', x1, y1, 50,50,0)
                    map2.append(w)
                x1 += 40

                if "2" in x:
                    m = gameobj('мина.png', x2,y2,50,50,80)
                    map2.append(m)
                x2 += 40
            x1 = 0
            y1+=40
            x2 = 0
            y2 +=40

        if sprite.collide_rect(player, exit2):
            lvl2 = False
            lvl3 = True
            for w in map2:
                map2.remove(w)
            with open('map3.txt') as file3:
                karta = file3.readlines()

        for y in karta:
            line = y.split(' ')
            for x in line:
                if "1" in x:
                    w = gameobj('wall.png', x1, y1, 50,50,0)
                    map3.append(w)
                x1 += 40

                if "2" in x:
                    m = gameobj('мина.png', x2,y2,50,50,80)
                    map3.append(m)
                x2 += 40
            x1 = 0
            y1+=40
            x2 = 0
            y2 +=40


    if sprite.collide_rect(player, m):
        player.hp -= 80
        map.remove(m)
    if player.hp <= 0:
        game = False


    window.fill((40, 80, 60))

    player.ris()

    #if e.type==KEYDOWN:
    #    if e.key==K_SPACE:
    #        bullet.rect.x = player.rect.x + 5
    #        bullet.ris()



    for w in map:
        w.ris()
    for m in map:
        m.ris()

    for w in map2:
        w.ris()
    for m in map2:
        m.ris()


    if lvl1 == True:
        exit1.ris()
    if lvl2 == True:
        exit2.ris()
    if lvl3 == True:
        exit3.ris()
    fps.tick(60)
    display.update()
